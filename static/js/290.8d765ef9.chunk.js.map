{"version":3,"file":"static/js/290.8d765ef9.chunk.js","mappings":"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","sources":["hooks/useFetchMovies.jsx","pages/MoviesSubPage/movies-sub-page.styled.js","pages/MoviesSubPage/MoviesSubPage.jsx","services/moviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport { fetchMovieById } from 'services/moviesApi';\n\nconst useFetchMovies = () => {\n  const [movie, setMovie] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieById(id)\n      .then(setMovie)\n      .catch(error => Notify.failure(error.response.data.status_message));\n  }, [id]);\n\n  return movie;\n};\n\nexport default useFetchMovies;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackBtn = styled.button`\n  display: flex;\n  align-items: center;\n  min-width: 30px;\n  padding: 10px;\n  color: #6e6d7a;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.15));\n  border-radius: 4px;\n\n  transition: color 200ms ease;\n\n  svg {\n    margin-right: 10px;\n  }\n\n  &:hover,\n  :focus {\n    color: #0d0c22;\n    outline-width: 0;\n    box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  }\n`;\n\nexport const MovieWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n  padding: 20px 0;\n`;\n\nexport const MovieInfo = styled.div`\n  max-width: 700px;\n`;\n\nexport const MovieTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 20px;\n`;\n\nexport const AddInfo = styled.div`\n  padding: 20px 0;\n  border-top: 1px solid #ececec;\n  font-size: 18px;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 20px;\n`;\n\nexport const AddItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  font-size: 18px;\n  color: #6e6d7a;\n  transition: color 200ms ease;\n\n  &:hover,\n  :focus {\n    color: #0d0c22;\n  }\n`;\n","import { Outlet, useNavigate, useLocation } from 'react-router-dom';\nimport { FaLongArrowAltLeft } from 'react-icons/fa';\n\nimport useFetchMovies from 'hooks/useFetchMovies';\n\nimport noPoster from '../../components/images/poster.png';\n\nimport {\n  BackBtn,\n  MovieWrapper,\n  MovieInfo,\n  MovieTitle,\n  SubTitle,\n  Description,\n  AddInfo,\n  List,\n  AddItem,\n  ItemLink,\n} from './movies-sub-page.styled';\n\nconst MoviesSubPage = () => {\n  const movie = useFetchMovies();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  return (\n    <>\n      {movie && (\n        <>\n          <BackBtn type=\"button\" onClick={() => navigate(from)}>\n            <FaLongArrowAltLeft />\n            Go back\n          </BackBtn>\n          <MovieWrapper>\n            <div>\n              <img\n                src={\n                  movie.poster_path\n                    ? 'https://image.tmdb.org/t/p/w300/' + movie.poster_path\n                    : noPoster\n                }\n                alt={movie.title}\n              />\n            </div>\n            <MovieInfo>\n              <MovieTitle>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </MovieTitle>\n\n              <Description>\n                User Score: {(movie.vote_average * 10).toFixed(0)}%\n              </Description>\n              <SubTitle>Overview</SubTitle>\n              <Description>{movie.overview}</Description>\n              <SubTitle>Genres</SubTitle>\n              <Description>\n                {movie.genres.map(genres => genres.name).join(', ')}\n              </Description>\n            </MovieInfo>\n          </MovieWrapper>\n          <AddInfo>\n            <SubTitle>Additional information</SubTitle>\n            <List>\n              <AddItem>\n                <ItemLink to=\"cast\" state={{ from }}>\n                  Cast\n                </ItemLink>\n              </AddItem>\n              <AddItem>\n                <ItemLink to=\"reviews\" state={{ from }}>\n                  Reviews\n                </ItemLink>\n              </AddItem>\n            </List>\n            <Outlet />\n          </AddInfo>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesSubPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'c1b8c874be54ebc5c34c225dbd6a36f5',\n    language: 'en-US',\n  },\n});\n\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["useState","movie","setMovie","id","useParams","useEffect","fetchMovieById","then","catch","error","Notify","response","data","status_message","BackBtn","styled","MovieWrapper","MovieInfo","MovieTitle","SubTitle","Description","AddInfo","List","AddItem","ItemLink","Link","useFetchMovies","navigate","useNavigate","from","useLocation","state","type","onClick","src","poster_path","noPoster","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","name","join","to","instance","axios","baseURL","params","page","api_key","language","fetchMovies","get","results","fetchMoviesByName","query","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}
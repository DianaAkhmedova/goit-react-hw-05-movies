{"version":3,"file":"static/js/680.e76842ef.chunk.js","mappings":"gOA2BA,UAlBiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,EAAAA,OAAAA,QAAeD,EAAME,SAASC,KAAKC,eAAvC,GACf,GAAE,KAGD,iCACE,SAAC,KAAD,8BACA,SAAC,IAAD,CAAWV,OAAQA,EAAQW,KAAM,aACjC,SAAC,KAAD,MAGL,C,yLCvBKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNJ,KAAM,EACNK,QAAS,mCACTC,SAAU,WAIDd,EAAW,mCAAG,sGACFS,EAASM,IAAI,uBADX,uBACjBT,EADiB,EACjBA,KADiB,kBAElBA,EAAKU,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAASM,IAAT,iBAAuBG,IADlB,uBACpBZ,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKda,EAAiB,mCAAG,WAAMC,GAAN,yFACRX,EAASM,IAAI,iBAAkB,CACpDH,OAAQ,CACNQ,MAAAA,KAH2B,uBACvBd,EADuB,EACvBA,KADuB,kBAMxBA,EAAKU,SANmB,2CAAH,sDASjBK,EAAc,mCAAG,WAAMH,GAAN,yFAGlBT,EAASM,IAAT,iBAAuBG,EAAvB,aAHkB,uBAElBI,EAFkB,EAE1BhB,KAAQgB,KAFkB,kBAIrBA,GAJqB,2CAAH,sDAOdC,EAAiB,mCAAG,WAAML,GAAN,yFAGrBT,EAASM,IAAT,iBAAuBG,EAAvB,aAHqB,uBAErBF,EAFqB,EAE7BV,KAAQU,QAFqB,kBAIxBA,GAJwB,2CAAH,qD,kECG9B,IA5BkB,SAAC,GAAsB,IAApBnB,EAAmB,EAAnBA,OAAQW,EAAW,EAAXA,KACrBgB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAAC,KAAD,UACG5B,EAAO6B,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,MAAoBC,EAA3B,EAAcC,YAAd,OACV,SAAC,KAAD,WACE,UAAC,KAAD,CAAUC,GAAE,UAAKtB,GAAL,OAAYU,GAAMa,MAAO,CAAEC,KAAMR,GAA7C,WACE,SAAC,KAAD,WACE,gBACES,IACEL,EACI,mCAAqCA,EACrCM,EAENC,IAAKR,OAGT,SAAC,KAAD,UAAaA,QAZFT,EADL,OAoBnB,C,+NCnCYkB,EAAYC,EAAAA,GAAAA,GAAH,mEAKTC,EAAOD,EAAAA,GAAAA,GAAH,8GAOJE,EAAWF,EAAAA,GAAAA,GAAH,kTAaRG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yFAMRK,EAAcL,EAAAA,GAAAA,IAAH,mFAcXM,GARSN,EAAAA,GAAAA,IAAH,yHAQOA,EAAAA,GAAAA,EAAH,iE","sources":["pages/HomePage/HomePage.jsx","services/moviesApi.js","shared/components/MovieList/MovieList.jsx","shared/components/MovieList/movie-list.styled.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport MovieList from 'shared/components/MovieList/MovieList';\nimport { fetchMovies } from 'services/moviesApi';\n\nimport { MainTitle } from 'shared/components/MovieList/movie-list.styled';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies()\n      .then(setMovies)\n      .catch(error => Notify.failure(error.response.data.status_message));\n  }, []);\n\n  return (\n    <>\n      <MainTitle>Trending today</MainTitle>\n      <MovieList movies={movies} page={'movies/'} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'c1b8c874be54ebc5c34c225dbd6a36f5',\n    language: 'en-US',\n  },\n});\n\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n","import { useLocation } from 'react-router-dom';\n\nimport noPoster from '../../../components/images/poster.png';\n\nimport {\n  List,\n  ListItem,\n  PosterThumb,\n  ItemLink,\n  MovieTitle,\n} from './movie-list.styled';\n\nconst MovieList = ({ movies, page }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path: poster }) => (\n          <ListItem key={id}>\n            <ItemLink to={`${page}${id}`} state={{ from: location }}>\n              <PosterThumb>\n                <img\n                  src={\n                    poster\n                      ? 'https://image.tmdb.org/t/p/w300/' + poster\n                      : noPoster\n                  }\n                  alt={title}\n                />\n              </PosterThumb>\n              <MovieTitle>{title}</MovieTitle>\n            </ItemLink>\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MainTitle = styled.h1`\n  margin-bottom: 20px;\n  color: #0d0c22;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 15px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px 16px;\n  border: 1px solid #eeeeee;\n  border-radius: 5px;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  :focus {\n    box-shadow: 0px 1px 1px rgb(0 0 0 / 12%), 0px 4px 4px rgb(0 0 0 / 6%),\n      1px 4px 6px rgb(0 0 0 / 16%);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  font-size: 10px;\n  color: #0d0c22;\n`;\n\nexport const PosterThumb = styled.div`\n  width: 300px;\n  height: 450px;\n  margin-bottom: 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const MovieTitle = styled.p`\n  font-size: 16px;\n  max-width: 300px;\n`;\n"],"names":["useState","movies","setMovies","useEffect","fetchMovies","then","catch","error","Notify","response","data","status_message","page","instance","axios","baseURL","params","api_key","language","get","results","fetchMovieById","id","fetchMoviesByName","query","fetchMovieCast","cast","fetchMovieReviews","location","useLocation","map","title","poster","poster_path","to","state","from","src","noPoster","alt","MainTitle","styled","List","ListItem","ItemLink","Link","PosterThumb","MovieTitle"],"sourceRoot":""}
{"version":3,"file":"static/js/770.dcb1b09d.chunk.js","mappings":"mQAEaA,EAASC,EAAAA,GAAAA,EAAH,yFAMNC,EAAUD,EAAAA,GAAAA,EAAH,oFAMPE,EAAOF,EAAAA,GAAAA,GAAH,+E,SCsBjB,EA5ByB,WACvB,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GACfI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,EAAAA,OAAAA,QAAeD,EAAME,SAASC,KAAKC,eAAvC,GACf,GAAE,CAACV,KAGF,8BACGF,EAAQa,QACP,wBACGb,EAAQc,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAClB,EAAD,YACE,UAACH,EAAD,sBAAiBoB,MACjB,SAAClB,EAAD,UAAUmB,MAFDd,EADA,OAQf,qEAIP,C,yLChCKe,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,KAAM,EACNC,QAAS,mCACTC,SAAU,WAIDC,EAAW,mCAAG,sGACFP,EAASQ,IAAI,uBADX,uBACjBd,EADiB,EACjBA,KADiB,kBAElBA,EAAKe,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAMzB,GAAN,yFACLe,EAASQ,IAAT,iBAAuBvB,IADlB,uBACpBS,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdiB,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASQ,IAAI,iBAAkB,CACpDL,OAAQ,CACNS,MAAAA,KAH2B,uBACvBlB,EADuB,EACvBA,KADuB,kBAMxBA,EAAKe,SANmB,2CAAH,sDASjBI,EAAc,mCAAG,WAAM5B,GAAN,yFAGlBe,EAASQ,IAAT,iBAAuBvB,EAAvB,aAHkB,uBAElB6B,EAFkB,EAE1BpB,KAAQoB,KAFkB,kBAIrBA,GAJqB,2CAAH,sDAOd1B,EAAiB,mCAAG,WAAMH,GAAN,yFAGrBe,EAASQ,IAAT,iBAAuBvB,EAAvB,aAHqB,uBAErBwB,EAFqB,EAE7Bf,KAAQe,QAFqB,kBAIxBA,GAJwB,2CAAH,qD","sources":["pages/MovieReviewsPage/movie-reviews-page.styled.js","pages/MovieReviewsPage/MovieReviewsPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Author = styled.p`\n  font-size: 18px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n\nexport const Content = styled.p`\n  font-size: 14px;\n  line-height: 1.5;\n  color: #6e6d7a;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport { fetchMovieReviews } from 'services/moviesApi';\n\nimport { Item, Author, Content } from './movie-reviews-page.styled';\n\nconst MovieReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(id)\n      .then(setReviews)\n      .catch(error => Notify.failure(error.response.data.status_message));\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <Item key={id}>\n              <Author>Author: {author}</Author>\n              <Content>{content}</Content>\n            </Item>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'c1b8c874be54ebc5c34c225dbd6a36f5',\n    language: 'en-US',\n  },\n});\n\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["Author","styled","Content","Item","useState","reviews","setReviews","id","useParams","useEffect","fetchMovieReviews","then","catch","error","Notify","response","data","status_message","length","map","author","content","instance","axios","baseURL","params","page","api_key","language","fetchMovies","get","results","fetchMovieById","fetchMoviesByName","query","fetchMovieCast","cast"],"sourceRoot":""}
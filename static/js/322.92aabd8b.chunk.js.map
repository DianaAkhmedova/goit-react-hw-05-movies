{"version":3,"file":"static/js/322.92aabd8b.chunk.js","mappings":"4NAmBWA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,ECHpB,EAdc,CACZ,CACED,GAAIN,IACJU,KAAM,OACNC,KAAM,KAGR,CACEL,GAAIN,IACJU,KAAM,SACNC,KAAM,W,uCCPGC,EAAUC,EAAAA,GAAAA,IAAH,sEAKPC,EAAUD,EAAAA,GAAAA,GAAH,8DAKPE,EAAOF,EAAAA,GAAAA,GAAH,8EAMJG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,uJAWJK,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,igB,SCXjB,EAjBe,WACb,IAAMO,EAAWC,EAAAA,KAAU,gBAAGf,EAAH,EAAGA,GAAII,EAAP,EAAOA,KAAMC,EAAb,EAAaA,KAAb,OACzB,SAACI,EAAD,WACE,SAACG,EAAD,CAAMI,GAAIX,EAAV,SAAiBD,KADRJ,EADc,IAM3B,OACE,UAACM,EAAD,YACE,SAACM,EAAD,CAAMI,GAAI,IAAV,UACE,SAACN,EAAD,OAEF,SAACF,EAAD,UAAUM,MAGf,E,UCjBYG,EAASV,EAAAA,GAAAA,OAAH,6NAQNW,EAAOX,EAAAA,GAAAA,KAAH,4CAIJY,EAAYZ,EAAAA,GAAAA,IAAH,oHCctB,EAnBe,WACb,OACE,iCACE,SAACU,EAAD,WACE,SAACE,EAAD,WACE,SAAC,EAAD,SAGJ,SAACD,EAAD,WACE,SAAC,EAAAE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAACH,EAAD,WACE,SAAC,KAAD,YAMX,C,sBC1Bc,SAASI,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["../node_modules/nanoid/index.browser.js","components/Navbar/items.js","components/Navbar/navbar.styled.js","components/Navbar/Navbar.jsx","components/Layout/layout.styled.js","components/Layout/Layout.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid';\n\nconst items = [\n  {\n    id: nanoid(),\n    text: 'Home',\n    link: '/',\n  },\n\n  {\n    id: nanoid(),\n    text: 'Movies',\n    link: 'movies',\n  },\n];\n\nexport default items;\n","import { NavLink } from 'react-router-dom';\nimport { FaFilm } from 'react-icons/fa';\n\nimport styled from 'styled-components';\n\nexport const PageNav = styled.nav`\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n\nexport const Icon = styled(FaFilm)`\n  margin-right: 20px;\n  color: #6e6d7a;\n  transition: color 200ms ease;\n\n  &:hover,\n  :focus {\n    color: #0d0c22;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 20px;\n  color: #6e6d7a;\n  transition: color 200ms ease, text-shadow 200ms ease;\n\n  &:hover,\n  :focus {\n    color: #0d0c22;\n    text-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n      0px 2px 1px rgb(0 0 0 / 20%);\n  }\n\n  &.active {\n    color: #0d0c22;\n    text-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n      0px 2px 1px rgb(0 0 0 / 20%);\n  }\n`;\n","import items from './items';\n\nimport { PageNav, NavList, Link, Icon, Item } from './navbar.styled';\n\nconst Navbar = () => {\n  const elements = items.map(({ id, text, link }) => (\n    <Item key={id}>\n      <Link to={link}>{text}</Link>\n    </Item>\n  ));\n\n  return (\n    <PageNav>\n      <Link to={'/'}>\n        <Icon />\n      </Link>\n      <NavList>{elements}</NavList>\n    </PageNav>\n  );\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  padding: 14px 0;\n  background-color: #fafafb;\n  border-bottom: 1px solid #ececec;\n  box-shadow: 0px 1px 3px rgb(0 0 0 / 12%), 0px 1px 1px rgb(0 0 0 / 14%),\n    0px 2px 1px rgb(0 0 0 / 20%);\n`;\n\nexport const Main = styled.main`\n  padding: 30px 0;\n`;\n\nexport const Container = styled.div`\n  padding-left: 30px;\n  padding-right: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nimport Navbar from 'components/Navbar/Navbar';\n\nimport Loader from 'shared/components/Loader/Loader';\n\nimport { Header, Main, Container } from './layout.styled';\n\nconst Layout = () => {\n  return (\n    <>\n      <Header>\n        <Container>\n          <Navbar />\n        </Container>\n      </Header>\n      <Main>\n        <Suspense fallback={<Loader />}>\n          <Container>\n            <Outlet />\n          </Container>\n        </Suspense>\n      </Main>\n    </>\n  );\n};\n\nexport default Layout;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","text","link","PageNav","styled","NavList","Item","Icon","FaFilm","Link","NavLink","elements","items","to","Header","Main","Container","Suspense","fallback","Loader","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}
{"version":3,"file":"static/js/757.bd114842.chunk.js","mappings":"iRAEaA,EAAWC,EAAAA,GAAAA,GAAH,4EAMRC,EAAOD,EAAAA,GAAAA,GAAH,iFAKJE,EAAaF,EAAAA,GAAAA,IAAH,mFAMVG,EAAYH,EAAAA,GAAAA,IAAH,yHAQTI,EAAQJ,EAAAA,GAAAA,EAAH,2C,SCuBlB,EApCsB,WACpB,OAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GACZI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,EAAAA,OAAAA,QAAeD,EAAME,SAASC,KAAKC,eAAvC,GACf,GAAE,CAACV,KAGF,8BACGF,EAAKa,QACJ,SAACpB,EAAD,UACGO,EAAKc,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,KAAoBC,EAA3B,EAAaC,aAAb,OACR,UAACtB,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEqB,IACEF,EAAQ,mCAAqCA,EAAQG,EAEvDC,IAAKL,OAIT,SAACjB,EAAD,UAAQiB,MAVCb,EADH,OAgBZ,8DAIP,C,yLC9CKmB,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,KAAM,EACNC,QAAS,mCACTC,SAAU,WAIDC,EAAW,mCAAG,sGACFP,EAASQ,IAAI,uBADX,uBACjBlB,EADiB,EACjBA,KADiB,kBAElBA,EAAKmB,SAFa,2CAAH,qDAKXC,EAAc,mCAAG,WAAM7B,GAAN,yFACLmB,EAASQ,IAAT,iBAAuB3B,IADlB,uBACpBS,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,sDAKdqB,EAAiB,mCAAG,WAAMC,GAAN,yFACRZ,EAASQ,IAAI,iBAAkB,CACpDL,OAAQ,CACNS,MAAAA,KAH2B,uBACvBtB,EADuB,EACvBA,KADuB,kBAMxBA,EAAKmB,SANmB,2CAAH,sDASjBzB,EAAc,mCAAG,WAAMH,GAAN,yFAGlBmB,EAASQ,IAAT,iBAAuB3B,EAAvB,aAHkB,uBAElBF,EAFkB,EAE1BW,KAAQX,KAFkB,kBAIrBA,GAJqB,2CAAH,sDAOdkC,EAAiB,mCAAG,WAAMhC,GAAN,yFAGrBmB,EAASQ,IAAT,iBAAuB3B,EAAvB,aAHqB,uBAErB4B,EAFqB,EAE7BnB,KAAQmB,QAFqB,kBAIxBA,GAJwB,2CAAH,qD","sources":["pages/MovieCastPage/movie-cast-page.styled.js","pages/MovieCastPage/MovieCastPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  padding: 5px;\n  flex-basis: calc((100% - 50px) / 6);\n`;\n\nexport const PhotoThumb = styled.div`\n  width: 200px;\n  height: 300px;\n  margin-bottom: 10px;\n`;\n\nexport const CastPhoto = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const Descr = styled.p`\n  color: #6e6d7a;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix';\n\nimport { fetchMovieCast } from 'services/moviesApi';\nimport noPhoto from '../../components/images/no-photo.png';\nimport {\n  CastList,\n  Item,\n  PhotoThumb,\n  CastPhoto,\n  Descr,\n} from './movie-cast-page.styled';\n\nconst MovieCastPage = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchMovieCast(id)\n      .then(setCast)\n      .catch(error => Notify.failure(error.response.data.status_message));\n  }, [id]);\n\n  return (\n    <>\n      {cast.length ? (\n        <CastList>\n          {cast.map(({ id, name, profile_path: photo }) => (\n            <Item key={id}>\n              <PhotoThumb>\n                <CastPhoto\n                  src={\n                    photo ? 'https://image.tmdb.org/t/p/w200/' + photo : noPhoto\n                  }\n                  alt={name}\n                />\n              </PhotoThumb>\n\n              <Descr>{name}</Descr>\n            </Item>\n          ))}\n        </CastList>\n      ) : (\n        <p>Sorry... Cast of actors not found</p>\n      )}\n    </>\n  );\n};\n\nexport default MovieCastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    page: 1,\n    api_key: 'c1b8c874be54ebc5c34c225dbd6a36f5',\n    language: 'en-US',\n  },\n});\n\nexport const fetchMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const fetchMoviesByName = async query => {\n  const { data } = await instance.get('/search/movie?', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchMovieCast = async id => {\n  const {\n    data: { cast },\n  } = await instance.get(`/movie/${id}/credits`);\n  return cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const {\n    data: { results },\n  } = await instance.get(`/movie/${id}/reviews`);\n  return results;\n};\n"],"names":["CastList","styled","Item","PhotoThumb","CastPhoto","Descr","useState","cast","setCast","id","useParams","useEffect","fetchMovieCast","then","catch","error","Notify","response","data","status_message","length","map","name","photo","profile_path","src","noPhoto","alt","instance","axios","baseURL","params","page","api_key","language","fetchMovies","get","results","fetchMovieById","fetchMoviesByName","query","fetchMovieReviews"],"sourceRoot":""}